// /moonLight/MoonButton.qml
#include <QtQml/qqmlprivate.h>
#include <QtCore/qdatetime.h>
#include <QtCore/qobject.h>
#include <QtCore/qstring.h>
#include <QtCore/qstringlist.h>
#include <QtCore/qurl.h>
#include <QtCore/qvariant.h>
#include <QtQml/qjsengine.h>
#include <QtQml/qjsprimitivevalue.h>
#include <QtQml/qjsvalue.h>
#include <QtQml/qqmlcomponent.h>
#include <QtQml/qqmlcontext.h>
#include <QtQml/qqmlengine.h>
#include <QtQml/qqmllist.h>
#include <type_traits>
namespace QmlCacheGeneratedCode {
namespace _moonLight_MoonButton_qml {
extern const unsigned char qmlData alignas(16) [];
extern const unsigned char qmlData alignas(16) [] = {

0x71,0x76,0x34,0x63,0x64,0x61,0x74,0x61,
0x3b,0x0,0x0,0x0,0x2,0x5,0x6,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0xd4,0xb,0x0,0x0,0x37,0x37,0x33,0x32,
0x31,0x65,0x66,0x37,0x39,0x66,0x64,0x61,
0x64,0x35,0x38,0x65,0x31,0x30,0x32,0x63,
0x32,0x62,0x36,0x31,0x33,0x63,0x30,0x31,
0x61,0x30,0x39,0x62,0x63,0x64,0x32,0x34,
0x37,0x35,0x35,0x66,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x74,0x9d,0xfc,0xd5,
0x10,0x5b,0x7a,0x49,0x90,0xc1,0x13,0x29,
0xc8,0x86,0x53,0xd7,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x23,0x0,0x0,0x0,
0x21,0x0,0x0,0x0,0xc8,0x3,0x0,0x0,
0x5,0x0,0x0,0x0,0xf8,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0xc,0x1,0x0,0x0,
0x0,0x0,0x0,0x0,0xc,0x1,0x0,0x0,
0x3,0x0,0x0,0x0,0xc,0x1,0x0,0x0,
0xc,0x0,0x0,0x0,0x18,0x1,0x0,0x0,
0x0,0x0,0x0,0x0,0x48,0x1,0x0,0x0,
0x4,0x0,0x0,0x0,0x50,0x1,0x0,0x0,
0x0,0x0,0x0,0x0,0x70,0x1,0x0,0x0,
0x0,0x0,0x0,0x0,0x70,0x1,0x0,0x0,
0x0,0x0,0x0,0x0,0x70,0x1,0x0,0x0,
0x0,0x0,0x0,0x0,0x70,0x1,0x0,0x0,
0x0,0x0,0x0,0x0,0x70,0x1,0x0,0x0,
0x0,0x0,0x0,0x0,0x70,0x1,0x0,0x0,
0x0,0x0,0x0,0x0,0x70,0x1,0x0,0x0,
0xff,0xff,0xff,0xff,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x20,0x8,0x0,0x0,
0x70,0x1,0x0,0x0,0x18,0x2,0x0,0x0,
0x80,0x2,0x0,0x0,0xf0,0x2,0x0,0x0,
0x48,0x3,0x0,0x0,0x98,0x3,0x0,0x0,
0xa8,0x3,0x0,0x0,0xb8,0x3,0x0,0x0,
0x43,0x0,0x0,0x0,0xf3,0x0,0x0,0x0,
0x31,0x1,0x0,0x0,0xf3,0x0,0x0,0x0,
0x31,0x1,0x0,0x0,0xf3,0x0,0x0,0x0,
0x31,0x1,0x0,0x0,0xf3,0x0,0x0,0x0,
0x43,0x0,0x0,0x0,0x31,0x1,0x0,0x0,
0x43,0x0,0x0,0x0,0x83,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x0,0xe0,0x84,0x3f,
0x0,0x0,0x0,0x0,0x0,0x40,0xbd,0x3f,
0x0,0x0,0x0,0x0,0x0,0x40,0xd1,0x3f,
0x0,0x0,0x0,0x0,0x0,0x40,0xf5,0x3f,
0x74,0x0,0x0,0x0,0x2c,0x0,0x0,0x0,
0x7,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x38,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x38,0x0,0x0,0x0,0x0,0x0,0x5,0x0,
0xff,0xff,0xff,0xff,0xa,0x0,0x0,0x0,
0x9,0x0,0x50,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x7,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x9,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x1,0x0,0x0,0x0,
0xa,0x0,0x0,0x0,0x2,0x0,0x0,0x0,
0xa,0x0,0x0,0x0,0xb,0x0,0x0,0x0,
0x4,0x0,0x0,0x0,0x1a,0x0,0x0,0x0,
0xd,0x0,0x0,0x0,0x6,0x0,0x0,0x0,
0x28,0x0,0x0,0x0,0xf,0x0,0x0,0x0,
0x6,0x0,0x0,0x0,0xca,0x2e,0x0,0x18,
0x7,0x8,0x60,0x7,0x50,0x10,0x2e,0x1,
0x18,0x8,0x12,0x1e,0x18,0x9,0x42,0x2,
0x8,0x1a,0x9,0x6,0x4c,0xe,0x2e,0x3,
0x18,0x8,0x12,0x1f,0x18,0x9,0x42,0x4,
0x8,0x1a,0x9,0x6,0xd4,0x16,0x6,0x2,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x50,0x0,0x0,0x0,0x13,0x0,0x0,0x0,
0x1b,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x38,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x38,0x0,0x0,0x0,0x0,0x0,0x2,0x0,
0xff,0xff,0xff,0xff,0x9,0x0,0x0,0x0,
0x1e,0x0,0x50,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x7,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x1e,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x1,0x0,0x0,0x0,
0x1e,0x0,0x0,0x0,0x1,0x0,0x0,0x0,
0xca,0x2e,0x5,0x18,0x7,0x12,0x20,0x18,
0x8,0x42,0x6,0x7,0x1a,0x8,0x6,0xd4,
0x16,0x6,0x2,0x0,0x0,0x0,0x0,0x0,
0x50,0x0,0x0,0x0,0x1b,0x0,0x0,0x0,
0x1d,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x38,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x38,0x0,0x0,0x0,0x0,0x0,0x2,0x0,
0xff,0xff,0xff,0xff,0x9,0x0,0x0,0x0,
0x1f,0x0,0x50,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x7,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x1f,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x1,0x0,0x0,0x0,
0x1f,0x0,0x0,0x0,0x1,0x0,0x0,0x0,
0xca,0x2e,0x7,0x18,0x7,0x2e,0x8,0x50,
0x4,0x12,0x1e,0x4c,0x2,0x12,0x1f,0x18,
0x8,0x42,0x9,0x7,0x1a,0x8,0x6,0xd4,
0x16,0x6,0x2,0x0,0x0,0x0,0x0,0x0,
0x44,0x0,0x0,0x0,0xd,0x0,0x0,0x0,
0x14,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x38,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x38,0x0,0x0,0x0,0x0,0x0,0x1,0x0,
0xff,0xff,0xff,0xff,0x7,0x0,0x0,0x0,
0x19,0x0,0x90,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x7,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x19,0x0,0x0,0x0,
0x1,0x0,0x0,0x0,0x2e,0xa,0x50,0x4,
0x12,0x1e,0x4c,0x2,0x12,0x1f,0x18,0x6,
0x2,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x44,0x0,0x0,0x0,0x5,0x0,0x0,0x0,
0x12,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x38,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x38,0x0,0x0,0x0,0x0,0x0,0x1,0x0,
0xff,0xff,0xff,0xff,0x7,0x0,0x0,0x0,
0x18,0x0,0x90,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x7,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x18,0x0,0x0,0x0,
0x1,0x0,0x0,0x0,0x2e,0xb,0x18,0x6,
0x2,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x10,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x10,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x10,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x50,0x4,0x0,0x0,0x58,0x4,0x0,0x0,
0x70,0x4,0x0,0x0,0x98,0x4,0x0,0x0,
0xb0,0x4,0x0,0x0,0xc8,0x4,0x0,0x0,
0xe0,0x4,0x0,0x0,0x8,0x5,0x0,0x0,
0x50,0x5,0x0,0x0,0x60,0x5,0x0,0x0,
0x80,0x5,0x0,0x0,0xa8,0x5,0x0,0x0,
0xc0,0x5,0x0,0x0,0xe0,0x5,0x0,0x0,
0xf0,0x5,0x0,0x0,0x8,0x6,0x0,0x0,
0x18,0x6,0x0,0x0,0x30,0x6,0x0,0x0,
0x40,0x6,0x0,0x0,0x70,0x6,0x0,0x0,
0x80,0x6,0x0,0x0,0xb0,0x6,0x0,0x0,
0xc8,0x6,0x0,0x0,0xe0,0x6,0x0,0x0,
0xf0,0x6,0x0,0x0,0x8,0x7,0x0,0x0,
0x28,0x7,0x0,0x0,0x40,0x7,0x0,0x0,
0x78,0x7,0x0,0x0,0x98,0x7,0x0,0x0,
0xd0,0x7,0x0,0x0,0xe8,0x7,0x0,0x0,
0x8,0x8,0x0,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x7,0x0,0x0,0x0,0x51,0x0,0x74,0x0,
0x51,0x0,0x75,0x0,0x69,0x0,0x63,0x0,
0x6b,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x10,0x0,0x0,0x0,0x51,0x0,0x74,0x0,
0x51,0x0,0x75,0x0,0x69,0x0,0x63,0x0,
0x6b,0x0,0x2e,0x0,0x43,0x0,0x6f,0x0,
0x6e,0x0,0x74,0x0,0x72,0x0,0x6f,0x0,
0x6c,0x0,0x73,0x0,0x0,0x0,0x0,0x0,
0x6,0x0,0x0,0x0,0x42,0x0,0x75,0x0,
0x74,0x0,0x74,0x0,0x6f,0x0,0x6e,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x8,0x0,0x0,0x0,0x63,0x0,0x68,0x0,
0x65,0x0,0x63,0x0,0x6b,0x0,0x42,0x0,
0x54,0x0,0x4e,0x0,0x0,0x0,0x0,0x0,
0x9,0x0,0x0,0x0,0x61,0x0,0x63,0x0,
0x74,0x0,0x69,0x0,0x76,0x0,0x65,0x0,
0x42,0x0,0x54,0x0,0x4e,0x0,0x0,0x0,
0x11,0x0,0x0,0x0,0x6f,0x0,0x6e,0x0,
0x43,0x0,0x68,0x0,0x65,0x0,0x63,0x0,
0x6b,0x0,0x42,0x0,0x54,0x0,0x4e,0x0,
0x43,0x0,0x68,0x0,0x61,0x0,0x6e,0x0,
0x67,0x0,0x65,0x0,0x64,0x0,0x0,0x0,
0x20,0x0,0x0,0x0,0x65,0x0,0x78,0x0,
0x70,0x0,0x72,0x0,0x65,0x0,0x73,0x0,
0x73,0x0,0x69,0x0,0x6f,0x0,0x6e,0x0,
0x20,0x0,0x66,0x0,0x6f,0x0,0x72,0x0,
0x20,0x0,0x6f,0x0,0x6e,0x0,0x43,0x0,
0x68,0x0,0x65,0x0,0x63,0x0,0x6b,0x0,
0x42,0x0,0x54,0x0,0x4e,0x0,0x43,0x0,
0x68,0x0,0x61,0x0,0x6e,0x0,0x67,0x0,
0x65,0x0,0x64,0x0,0x0,0x0,0x0,0x0,
0x4,0x0,0x0,0x0,0x72,0x0,0x6f,0x0,
0x6f,0x0,0x74,0x0,0x0,0x0,0x0,0x0,
0xd,0x0,0x0,0x0,0x69,0x0,0x6d,0x0,
0x70,0x0,0x6c,0x0,0x69,0x0,0x63,0x0,
0x69,0x0,0x74,0x0,0x57,0x0,0x69,0x0,
0x64,0x0,0x74,0x0,0x68,0x0,0x0,0x0,
0xe,0x0,0x0,0x0,0x69,0x0,0x6d,0x0,
0x70,0x0,0x6c,0x0,0x69,0x0,0x63,0x0,
0x69,0x0,0x74,0x0,0x48,0x0,0x65,0x0,
0x69,0x0,0x67,0x0,0x68,0x0,0x74,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x7,0x0,0x0,0x0,0x70,0x0,0x61,0x0,
0x6c,0x0,0x65,0x0,0x74,0x0,0x74,0x0,
0x65,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0xa,0x0,0x0,0x0,0x62,0x0,0x75,0x0,
0x74,0x0,0x74,0x0,0x6f,0x0,0x6e,0x0,
0x54,0x0,0x65,0x0,0x78,0x0,0x74,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x5,0x0,0x0,0x0,0x77,0x0,0x68,0x0,
0x69,0x0,0x74,0x0,0x65,0x0,0x0,0x0,
0x9,0x0,0x0,0x0,0x52,0x0,0x65,0x0,
0x63,0x0,0x74,0x0,0x61,0x0,0x6e,0x0,
0x67,0x0,0x6c,0x0,0x65,0x0,0x0,0x0,
0x3,0x0,0x0,0x0,0x62,0x0,0x6b,0x0,
0x67,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x7,0x0,0x0,0x0,0x61,0x0,0x6e,0x0,
0x63,0x0,0x68,0x0,0x6f,0x0,0x72,0x0,
0x73,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x4,0x0,0x0,0x0,0x66,0x0,0x69,0x0,
0x6c,0x0,0x6c,0x0,0x0,0x0,0x0,0x0,
0x13,0x0,0x0,0x0,0x65,0x0,0x78,0x0,
0x70,0x0,0x72,0x0,0x65,0x0,0x73,0x0,
0x73,0x0,0x69,0x0,0x6f,0x0,0x6e,0x0,
0x20,0x0,0x66,0x0,0x6f,0x0,0x72,0x0,
0x20,0x0,0x66,0x0,0x69,0x0,0x6c,0x0,
0x6c,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x5,0x0,0x0,0x0,0x63,0x0,0x6f,0x0,
0x6c,0x0,0x6f,0x0,0x72,0x0,0x0,0x0,
0x14,0x0,0x0,0x0,0x65,0x0,0x78,0x0,
0x70,0x0,0x72,0x0,0x65,0x0,0x73,0x0,
0x73,0x0,0x69,0x0,0x6f,0x0,0x6e,0x0,
0x20,0x0,0x66,0x0,0x6f,0x0,0x72,0x0,
0x20,0x0,0x63,0x0,0x6f,0x0,0x6c,0x0,
0x6f,0x0,0x72,0x0,0x0,0x0,0x0,0x0,
0x6,0x0,0x0,0x0,0x72,0x0,0x61,0x0,
0x64,0x0,0x69,0x0,0x75,0x0,0x73,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x6,0x0,0x0,0x0,0x62,0x0,0x6f,0x0,
0x72,0x0,0x64,0x0,0x65,0x0,0x72,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x5,0x0,0x0,0x0,0x77,0x0,0x69,0x0,
0x64,0x0,0x74,0x0,0x68,0x0,0x0,0x0,
0x7,0x0,0x0,0x0,0x23,0x0,0x35,0x0,
0x33,0x0,0x35,0x0,0x37,0x0,0x35,0x0,
0x45,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0xa,0x0,0x0,0x0,0x62,0x0,0x61,0x0,
0x63,0x0,0x6b,0x0,0x67,0x0,0x72,0x0,
0x6f,0x0,0x75,0x0,0x6e,0x0,0x64,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x9,0x0,0x0,0x0,0x6f,0x0,0x6e,0x0,
0x50,0x0,0x72,0x0,0x65,0x0,0x73,0x0,
0x73,0x0,0x65,0x0,0x64,0x0,0x0,0x0,
0x18,0x0,0x0,0x0,0x65,0x0,0x78,0x0,
0x70,0x0,0x72,0x0,0x65,0x0,0x73,0x0,
0x73,0x0,0x69,0x0,0x6f,0x0,0x6e,0x0,
0x20,0x0,0x66,0x0,0x6f,0x0,0x72,0x0,
0x20,0x0,0x6f,0x0,0x6e,0x0,0x50,0x0,
0x72,0x0,0x65,0x0,0x73,0x0,0x73,0x0,
0x65,0x0,0x64,0x0,0x0,0x0,0x0,0x0,
0xa,0x0,0x0,0x0,0x6f,0x0,0x6e,0x0,
0x52,0x0,0x65,0x0,0x6c,0x0,0x65,0x0,
0x61,0x0,0x73,0x0,0x65,0x0,0x64,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x19,0x0,0x0,0x0,0x65,0x0,0x78,0x0,
0x70,0x0,0x72,0x0,0x65,0x0,0x73,0x0,
0x73,0x0,0x69,0x0,0x6f,0x0,0x6e,0x0,
0x20,0x0,0x66,0x0,0x6f,0x0,0x72,0x0,
0x20,0x0,0x6f,0x0,0x6e,0x0,0x52,0x0,
0x65,0x0,0x6c,0x0,0x65,0x0,0x61,0x0,
0x73,0x0,0x65,0x0,0x64,0x0,0x0,0x0,
0x7,0x0,0x0,0x0,0x23,0x0,0x34,0x0,
0x44,0x0,0x42,0x0,0x36,0x0,0x41,0x0,
0x43,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0xb,0x0,0x0,0x0,0x74,0x0,0x72,0x0,
0x61,0x0,0x6e,0x0,0x73,0x0,0x70,0x0,
0x61,0x0,0x72,0x0,0x65,0x0,0x6e,0x0,
0x74,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x7,0x0,0x0,0x0,0x23,0x0,0x32,0x0,
0x31,0x0,0x41,0x0,0x31,0x0,0x39,0x0,
0x31,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x2,0x0,0x0,0x0,0x10,0x0,0x0,0x0,
0x5,0x0,0x0,0x0,0x38,0x0,0x0,0x0,
0x1,0x0,0x0,0x0,0x1,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x1,0x0,0x10,0x0,
0xff,0xff,0x0,0x0,0x1,0x0,0x0,0x0,
0x2,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x2,0x0,0x10,0x0,0xff,0xff,0x0,0x0,
0x4c,0x0,0x0,0x0,0x94,0x1,0x0,0x0,
0x4,0x2,0x0,0x0,0xbc,0x2,0x0,0x0,
0x2c,0x3,0x0,0x0,0x3,0x0,0x0,0x0,
0x8,0x0,0x0,0x0,0x0,0x0,0xff,0xff,
0xff,0xff,0xff,0xff,0x0,0x0,0x2,0x0,
0x54,0x0,0x0,0x0,0x54,0x0,0x0,0x0,
0x6c,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x6c,0x0,0x0,0x0,0x6c,0x0,0x0,0x0,
0x0,0x0,0x9,0x0,0x6c,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x44,0x1,0x0,0x0,
0x4,0x0,0x10,0x0,0x11,0x0,0x50,0x0,
0x44,0x1,0x0,0x0,0x0,0x0,0x0,0x0,
0x44,0x1,0x0,0x0,0x0,0x0,0x0,0x0,
0x4,0x0,0x0,0x0,0x2,0x0,0x0,0x20,
0x6,0x0,0x50,0x0,0x5,0x0,0x0,0x0,
0x2,0x0,0x0,0x20,0x7,0x0,0x50,0x0,
0x1c,0x0,0x0,0x0,0x0,0x0,0x7,0x0,
0x2,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x1f,0x0,0x50,0x0,0x1f,0x0,0x10,0x1,
0x1a,0x0,0x0,0x0,0x0,0x0,0x7,0x0,
0x1,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x1e,0x0,0x50,0x0,0x1e,0x0,0x0,0x1,
0x19,0x0,0x0,0x0,0x0,0x0,0x8,0x0,
0x2,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x16,0x0,0x50,0x0,0x16,0x0,0x10,0x1,
0xa,0x0,0x0,0x0,0x0,0x0,0x2,0x0,
0x1,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x13,0x0,0x50,0x0,0x13,0x0,0x50,0x1,
0x9,0x0,0x0,0x0,0x0,0x0,0x2,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x12,0x0,0x50,0x0,0x12,0x0,0x40,0x1,
0x6,0x0,0x0,0x0,0x0,0x0,0x7,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x9,0x0,0x50,0x0,0x9,0x0,0x80,0x1,
0x5,0x0,0x0,0x0,0x0,0x0,0x1,0x0,
0x1,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x7,0x0,0x30,0x1,0x7,0x0,0xe0,0x1,
0x4,0x0,0x0,0x0,0x0,0x0,0x1,0x0,
0x1,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x6,0x0,0x30,0x1,0x6,0x0,0xd0,0x1,
0xb,0x0,0x0,0x0,0x0,0x0,0xa,0x0,
0x1,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x14,0x0,0x50,0x0,0x14,0x0,0xd0,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0xff,0xff,
0xff,0xff,0xff,0xff,0x0,0x0,0x0,0x0,
0x54,0x0,0x0,0x0,0x54,0x0,0x0,0x0,
0x54,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x54,0x0,0x0,0x0,0x54,0x0,0x0,0x0,
0x0,0x0,0x1,0x0,0x54,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x6c,0x0,0x0,0x0,
0x14,0x0,0x50,0x0,0x0,0x0,0x0,0x0,
0x6c,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x6c,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0xc,0x0,0x0,0x0,0x0,0x0,0x3,0x0,
0x0,0x0,0x0,0x0,0xd,0x0,0x0,0x0,
0x14,0x0,0xd0,0x0,0x14,0x0,0x90,0x1,
0x0,0x0,0x0,0x0,0xe,0x0,0x0,0x0,
0xf,0x0,0x0,0x0,0x0,0x0,0xff,0xff,
0xff,0xff,0xff,0xff,0x0,0x0,0x0,0x0,
0x54,0x0,0x0,0x0,0x54,0x0,0x0,0x0,
0x54,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x54,0x0,0x0,0x0,0x54,0x0,0x0,0x0,
0x0,0x0,0x4,0x0,0x54,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0xb4,0x0,0x0,0x0,
0x16,0x0,0x10,0x1,0x17,0x0,0x90,0x0,
0xb4,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0xb4,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x15,0x0,0x0,0x0,0x0,0x0,0x2,0x0,
0x2,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x1a,0x0,0x90,0x0,0x1a,0x0,0x10,0x1,
0x13,0x0,0x0,0x0,0x0,0x0,0x7,0x0,
0x3,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x19,0x0,0x90,0x0,0x19,0x0,0x0,0x1,
0x16,0x0,0x0,0x0,0x0,0x0,0xa,0x0,
0x4,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x1b,0x0,0x90,0x0,0x1b,0x0,0x0,0x1,
0x10,0x0,0x0,0x0,0x0,0x0,0xa,0x0,
0x3,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x18,0x0,0x90,0x0,0x18,0x0,0x10,0x1,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0xff,0xff,
0xff,0xff,0xff,0xff,0x0,0x0,0x0,0x0,
0x54,0x0,0x0,0x0,0x54,0x0,0x0,0x0,
0x54,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x54,0x0,0x0,0x0,0x54,0x0,0x0,0x0,
0x0,0x0,0x1,0x0,0x54,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x6c,0x0,0x0,0x0,
0x18,0x0,0x90,0x0,0x0,0x0,0x0,0x0,
0x6c,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x6c,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x11,0x0,0x0,0x0,0x0,0x0,0x7,0x0,
0x4,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x18,0x0,0x10,0x1,0x18,0x0,0x70,0x1,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0xff,0xff,
0xff,0xff,0xff,0xff,0x0,0x0,0x0,0x0,
0x54,0x0,0x0,0x0,0x54,0x0,0x0,0x0,
0x54,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x54,0x0,0x0,0x0,0x54,0x0,0x0,0x0,
0x0,0x0,0x2,0x0,0x54,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x84,0x0,0x0,0x0,
0x1b,0x0,0x90,0x0,0x0,0x0,0x0,0x0,
0x84,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x84,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x13,0x0,0x0,0x0,0x0,0x0,0x3,0x0,
0x0,0x0,0x0,0x0,0x18,0x0,0x0,0x0,
0x1c,0x0,0x0,0x1,0x1c,0x0,0x70,0x1,
0x17,0x0,0x0,0x0,0x0,0x0,0x2,0x0,
0x3,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x1b,0x0,0x0,0x1,0x1b,0x0,0x70,0x1,
0x0,0x0,0x0,0x0
};
QT_WARNING_PUSH
QT_WARNING_DISABLE_MSVC(4573)

template <typename Binding>
void wrapCall(const QQmlPrivate::AOTCompiledContext *aotContext, void *dataPtr, void **argumentsPtr, Binding &&binding)
{
    using return_type = std::invoke_result_t<Binding, const QQmlPrivate::AOTCompiledContext *, void **>;
    if constexpr (std::is_same_v<return_type, void>) {
       Q_UNUSED(dataPtr)
       binding(aotContext, argumentsPtr);
    } else {
        if (dataPtr) {
           new (dataPtr) return_type(binding(aotContext, argumentsPtr));
        } else {
           binding(aotContext, argumentsPtr);
        }
    }
}
extern const QQmlPrivate::TypedFunction aotBuiltFunctions[];
extern const QQmlPrivate::TypedFunction aotBuiltFunctions[] = {
{ 0, QMetaType::fromType<void>(), {  }, 
    [](const QQmlPrivate::AOTCompiledContext *aotContext, void *dataPtr, void **argumentsPtr) {
        wrapCall(aotContext, dataPtr, argumentsPtr, [](const QQmlPrivate::AOTCompiledContext *aotContext, void **argumentsPtr) {
Q_UNUSED(aotContext)
Q_UNUSED(argumentsPtr)
// expression for onCheckBTNChanged at line 9, column 5
bool r7_1;
QObject *r8_1;
QObject *r2_2;
QString r2_3;
bool r2_1;
// generate_CreateCallContext
{
// generate_LoadQmlContextPropertyLookup
while (!aotContext->loadScopeObjectPropertyLookup(0, &r2_1)) {
aotContext->setInstructionPointer(3);
aotContext->initLoadScopeObjectPropertyLookup(0, QMetaType::fromType<bool>());
if (aotContext->engine->hasError())
    return ;
}
// generate_StoreReg
r7_1 = r2_1;
// generate_LoadTrue
r2_1 = true;
// generate_CmpEq
r2_1 = r7_1 == r2_1;
// generate_JumpFalse
if (!r2_1) {
    goto label_0;
}
;
// generate_LoadQmlContextPropertyLookup
while (!aotContext->loadContextIdLookup(1, &r2_2)) {
aotContext->setInstructionPointer(12);
aotContext->initLoadContextIdLookup(1);
if (aotContext->engine->hasError())
    return ;
}
// generate_StoreReg
r8_1 = r2_2;
// generate_LoadRuntimeString
r2_3 = QStringLiteral("#4DB6AC");
// generate_SetLookup
{
auto converted = QVariant::fromValue(r2_3);
const QMetaType argType = aotContext->lookupResultMetaType(2);
if (argType.isValid())
    converted.convert(argType);
while (!aotContext->setObjectLookup(2, r8_1, converted.data())) {
aotContext->setInstructionPointer(21);
aotContext->initSetObjectLookup(2, r8_1, argType);
if (aotContext->engine->hasError())
    return ;
const QMetaType argType = aotContext->lookupResultMetaType(2);
if (argType.isValid())
    converted.convert(argType);
}
}
// generate_Jump
{
    goto label_1;
}
;
label_0:;
// generate_LoadQmlContextPropertyLookup
while (!aotContext->loadContextIdLookup(3, &r2_2)) {
aotContext->setInstructionPointer(28);
aotContext->initLoadContextIdLookup(3);
if (aotContext->engine->hasError())
    return ;
}
// generate_StoreReg
r8_1 = r2_2;
// generate_LoadRuntimeString
r2_3 = QStringLiteral("transparent");
// generate_SetLookup
{
auto converted = QVariant::fromValue(r2_3);
const QMetaType argType = aotContext->lookupResultMetaType(4);
if (argType.isValid())
    converted.convert(argType);
while (!aotContext->setObjectLookup(4, r8_1, converted.data())) {
aotContext->setInstructionPointer(37);
aotContext->initSetObjectLookup(4, r8_1, argType);
if (aotContext->engine->hasError())
    return ;
const QMetaType argType = aotContext->lookupResultMetaType(4);
if (argType.isValid())
    converted.convert(argType);
}
}
label_1:;
// generate_PopContext
;}
// generate_Ret
return;
});}
 },{ 0, QMetaType::fromType<void>(), {}, nullptr }};
QT_WARNING_POP
}
}
